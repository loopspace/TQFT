% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
tqft --- a style file for drawing TQFT diagrams with TikZ/PGF
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

This package defines some node shapes useful for drawing TQFT diagrams with TikZ/PGF.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
tqft --- a style file for drawing TQFT diagrams with TikZ/PGF
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2011 by Andrew Stacey <stacey@math.ntnu.no>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Andrew Stacey.

This work consists of the file  tqft.dtx
and the derived files           tqft.ins,
                                tqft.pdf, and
                                tqft.sty.

\endpostamble
\usedir{tex/latex/tqft}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/tqft}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/demopkg}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tqft}[2011/05/03 v1.0 Tikz/PGF commands for drawing TQFT diagrams]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
%\usepackage{morefloats}
\usepackage{tikz}
\usepackage{\jobname}
\usepackage[numbered]{hypdoc}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9} 
 
\usepackage{listings}
\lstloadlanguages{[LaTeX]TeX}
\lstset{breakatwhitespace=true,breaklines=true,language=TeX}
 
\usepackage{fancyvrb}

\newenvironment{example}
  {\VerbatimEnvironment
   \begin{VerbatimOut}[gobble=2]{example.out}}
  {\end{VerbatimOut}
   \begin{center}
%   \setlength{\parindent}{0pt}
   \fbox{\begin{minipage}{.9\linewidth}
     \lstset{breakatwhitespace=true,breaklines=true,language=TeX,basicstyle=\small}
     \lstinputlisting[]{example.out}
   \end{minipage}}

   \fbox{\begin{minipage}{.9\linewidth}
     \input{example.out}
   \end{minipage}}
\end{center}
}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2011/05/03}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \providecommand*{\url}{\texttt}
% \GetFileInfo{tqft.dtx}
% \title{The \textsf{tqft} package}
% \author{Andrew Stacey \\ \url{stacey@math.ntnu.no}}
% \date{\fileversion~from \filedate}
%
% \maketitle
%
%
% \begin{tikzpicture}[every node/.style={tqft cobordism style={draw,thick,red}}]
% \node[
%   cobordism,
%   fill=orange,
%   fill opacity=.5,
%   tqft boundary style={fill=purple},
%   tqft cobordism style={draw,thick,red},
%   tqft boundary lower style={draw,dashed,thick,blue},
%   tqft boundary upper style={draw,green,thick},
%   tqft incoming boundary components=4,
%   tqft outgoing boundary components=6,
%   tqft offset=-1.5,
% ] (a) {};
% \fill (0,0) circle[radius=2pt];
% \fill (a.incoming boundary 1) circle[radius=2pt];
% \fill (a.incoming boundary 3) circle[radius=2pt];
% \fill (a.outgoing boundary 1) circle[radius=2pt];
% \fill (a.outgoing boundary 4) circle[radius=2pt];
% \fill (a.outgoing boundary 2) circle[radius=2pt];
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=1,
%   tqft outgoing boundary components=2,
%   tqft offset=-.5,
% ] at (-3,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=2,
%   tqft outgoing boundary components=1,
%   tqft offset=.5,
% ] at (-1,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=1,
%   tqft outgoing boundary components=1,
%   tqft offset=-.5,
% ] at (1,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=1,
%   tqft outgoing boundary components=1,
%   tqft offset=.5,
% ] at (3,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=1,
%   tqft outgoing boundary components=1,
% ] at (4.5,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=1,
%   tqft outgoing boundary components=0,
% ] at (5.5,-3) {};
% \node[
%   draw,
%   cobordism,
%   tqft incoming boundary components=0,
%   tqft outgoing boundary components=1,
% ] at (6.5,-3) {};
% \end{tikzpicture}
%
% \section{Introduction}
%
% This package defines some TikZ/PGF node shapes that can be used to construct the diagrams common in Topological Quantum Field Theory (TQFT).
% An example follows:
%
% \begin{example}
% \begin{tikzpicture}
% \node[draw,pair of pants] (a) {};
% \node[draw,reverse pair of pants, anchor=incoming boundary 1] at (a.outgoing boundary 2) (b) {};
% \end{tikzpicture}
% \end{example}
%
%
% \section{The Shapes}
%
% The shapes defined are the following, together with the anchors that they define.
% All shapes have a \Verb+center+ (and \Verb+centre+) anchor.
% The other anchors correspond to \emph{boundary components} and are placed at the centre of the corresponding component.
% Where there is more than one component of a given type (incoming or outgoing), the numbering goes from left to right or from top to bottom (depending on the flow of the cobordism).
%
% \begin{enumerate}
% \item \Verb+pair of pants+
%
% \begin{tikzpicture}
% \node[draw,pair of pants] (a) {};
% \fill[red] (a.incoming boundary) circle[radius=2pt];
% \fill[green] (a.outgoing boundary 1) circle[radius=2pt];
% \fill[blue] (a.outgoing boundary 2) circle[radius=2pt];
% \end{tikzpicture}
%
% This has the following (additional) anchors:
%
% \begin{itemize}
% \item \Verb+incoming boundary+
% \item \Verb+outgoing boundary 1+
% \item \Verb+outgoing boundary 2+
% \end{itemize}
%
% \item \Verb+reverse pair of pants+
%
% \begin{tikzpicture}
% \node[draw,reverse pair of pants] (a) {};
% \fill[red] (a.incoming boundary 1) circle[radius=2pt];
% \fill[green] (a.incoming boundary 2) circle[radius=2pt];
% \fill[blue] (a.outgoing boundary) circle[radius=2pt];
% \end{tikzpicture}
%
% This has the following (additional) anchors:
% \begin{itemize}
% \item \Verb+incoming boundary 1+
% \item \Verb+incoming boundary 2+
% \item \Verb+outgoing boundary+
% \end{itemize}
%
%
% \item \Verb+cylinder to prior+
%
% This is a cylinder that has been skewed to one side, thus following the same path as the \Verb+pair of pants+ cobordism but with only one outgoing boundary component.
% The name \Verb+to prior+ is because it goes towards the lower-numbered component on the \Verb+pair of pants+. 
%
% \begin{tikzpicture}
% \node[draw,cylinder to prior] (a) {};
% \fill[red] (a.incoming boundary) circle[radius=2pt];
% \fill[green] (a.outgoing boundary) circle[radius=2pt];
% \end{tikzpicture}
%
% This has the following (additional) anchors:
% \begin{itemize}
% \item \Verb+incoming boundary+
% \item \Verb+outgoing boundary+
% \end{itemize}
%
% \item \Verb+cylinder to next+
%
% This is a cylinder that has been skewed to one side, thus following the same path as the \Verb+pair of pants+ cobordism but with only one outgoing boundary component.
% The name \Verb+to next+ is because it goes towards the higher-numbered component on the \Verb+pair of pants+. 
%
% \begin{tikzpicture}
% \node[draw,cylinder to next] (a) {};
% \fill[red] (a.incoming boundary) circle[radius=2pt];
% \fill[green] (a.outgoing boundary) circle[radius=2pt];
% \end{tikzpicture}
%
% This has the following (additional) anchors:
% \begin{itemize}
% \item \Verb+incoming boundary+
% \item \Verb+outgoing boundary+
% \end{itemize}
%
% \item \Verb+tqft cylinder+
%
% This is a straight cylinder.
% It has the prefix \Verb+tqft+ to distinguish it from the ordinary \Verb+cylinder+ shape.
%
% \begin{tikzpicture}
% \node[draw,tqft cylinder] (a) {};
% \fill[red] (a.incoming boundary) circle[radius=2pt];
% \fill[green] (a.outgoing boundary) circle[radius=2pt];
% \end{tikzpicture}
%
% This has the following (additional) anchors:
% \begin{itemize}
% \item \Verb+incoming boundary+
% \item \Verb+outgoing boundary+
% \end{itemize}
%
% \item \Verb+tqft cap+
%
% This is a cap.
%
% \begin{tikzpicture}
% \node[draw,tqft cap] (a) {};
% \fill[red] (a) circle[radius=2pt];
% \end{tikzpicture}
%
% This has no additional anchors.
%
% \item \Verb+tqft cup+
%
% This is a cup (an upside-down cap).
%
% \begin{tikzpicture}
% \node[draw,tqft cup] (a) {};
% \fill[red] (a) circle[radius=2pt];
% \end{tikzpicture}
%
% This has no additional anchors.
% \end{enumerate}
%
% \section{Styling}
%
% There are various options for styling the diagrams.
% These are all handled by keys that can be set either on the individual nodes or on the surrounding \Verb+tikzpicture+ or \Verb+scope+.
%
% \DescribeMacro{tqft cobordism height}
% The key \Verb+/pgf/tqft cobordism height+ sets the height of the cobordism.
% Literally, it is the perpendicular distance between the centres incoming and outgoing boundary components.
%
% \DescribeMacro{tqft boundary separation}
% The key \Verb+/pgf/tqft boundary separation+ sets the separation between the boundary components of the same type.
% It is the distance between the centres of the components.
% When a cobordism offsets the incoming and outgoing components (say, the \Verb+pair of pants+) then the offset is half of this distance.
%
% \DescribeMacro{tqft circle width}
% The key \Verb+/pgf/tqft circle width+ sets the width of the boundary circles.
% (Actually, it sets the radius.)
%
% \DescribeMacro{tqft circle depth}
% The key \Verb+/pgf/tqft circle depth+ sets the depth of the boundary circles.
% (Actually, it sets the radius.)
%
% \DescribeMacro{tqft flow}
% Cobordisms have a ``flow'' from incoming to outgoing boundary.
% The key \Verb+tqft flow+ orients the cobordisms so that the flow points along the axis described.
% Valid options are \Verb+north+, \Verb+south+, \Verb+east+, and \Verb+west+.
% The transformation is not quite a simple rotation, as the numbering of boundary components is kept in a left-to-right or top-to-bottom order (as appropriate).
%
% \DescribeMacro{tqft view from}
% The cobordisms are drawn as if viewed from above one end.
% The key \Verb+/pgf/tqft view from+ changes which end.
% Valid options are \Verb+incoming+ and \Verb+outgoing+.
%
% The other keys describe how the shapes are drawn.
% To understand how they work, it is important to know the order in which a cobordism is drawn and how many pieces it decomposes in to.
% This is the following list, with the corresponding key:
%
% \begin{enumerate}
% \item The boundary circles are drawn.
%
% \Verb+/pgf/tqft boundary style+
%
% \item The lower edges of the boundary circles are redrawn.
%
% \Verb+/pgf/tqft boundary lower style+
%
% \item The cobordism itself is drawn.
%
% \item The non-boundary edge of the cobordism is redrawn.
%
% \Verb+/pgf/tqft cobordism style+
%
% \item The upper edges of the boundary circles are redrawn.
%
% \Verb+/pgf/tqft boundary upper style+
% \end{enumerate}
%
% The fact that there are so many is to allow different style to be applied to different pieces.
% The duplication is to allow certain composite pieces to be \emph{filled}.
% All of these items can be styled separately.
% The style given to the node itself is passed on to the third item in that list, the cobordism itself.
% The styles of the others are controlled by a series of keys, each of should be a list of style to be applied to that component.
% Not all options make sense, in particular only the first and third can be filled.
% (That is, the \Verb+fill+ style is ignored on the other components.)
%
%
% \StopEventually{}
%
% \section{Implementation}
%
% \iffalse
%<*package>
% \fi
% These are some lengths that we will use
%    \begin{macrocode}
\newdimen\pgf@tqft@north
\newdimen\pgf@tqft@south
\newdimen\pgf@tqft@east
\newdimen\pgf@tqft@west
\newdimen\pgf@tqft@bdry@width
\newdimen\pgf@tqft@bdry@depth
\newdimen\pgf@tqft@ctrla
\newdimen\pgf@tqft@ctrlb
%    \end{macrocode}
%
% We can view the cobordisms from the \emph{input} or \emph{output} ends, the implementation of the choice is to draw an arc from 0 to 180 or from 0 to -180 so we just need to track minus signs.
% These macros are for that.
%    \begin{macrocode}
\def\pgf@tqft@minus{-}
\let\pgf@tqft@upper\@empty
\let\pgf@tqft@lower\pgf@tqft@minus
%    \end{macrocode}
%
% This sets up all the keys that we need
%    \begin{macrocode}
\pgfkeys{/pgf/.cd,
  tqft cobordism height/.initial=2cm,
  tqft boundary separation/.initial=2cm,
  tqft circle width/.initial=10pt,
  tqft circle depth/.initial=5pt,
  tqft flow/.initial=south,
  tqft view from/.is choice,
  tqft view from/incoming/.code={\let\pgf@tqft@upper\pgf@tqft@minus\let\pgf@tqft@lower\@empty},
  tqft view from/outgoing/.code={\let\pgf@tqft@lower\pgf@tqft@minus\let\pgf@tqft@upper\@empty},
  tqft boundary lower style contents/.initial={},
  tqft boundary lower style/.code={\pgfkeys{/pgf/tqft boundary lower style contents/.style={/tikz/.cd,#1}}},
  tqft boundary style contents/.initial={},
  tqft boundary style/.code={\pgfkeys{/pgf/tqft boundary style contents/.style={/tikz/.cd,#1}}},
  tqft boundary upper style contents/.initial={},
  tqft boundary upper style/.code={\pgfkeys{/pgf/tqft boundary upper style contents/.style={/tikz/.cd,#1}}},
  tqft cobordism style contents/.initial={},
  tqft cobordism style/.code={\pgfkeys{/pgf/tqft cobordism style contents/.style={/tikz/.cd,#1}}},
}
%    \end{macrocode}
%
% The direction of the flow sets up a transformation to be applied to
% the node shapes; this complicates the anchors a little as they look
% different from the inside and the outside.
% These macros are the default transformations.
%    \begin{macrocode}
\def\pgf@tqft@flow@south{}
\def\pgf@tqft@flow@north{\pgftransformxscale{-1}\pgftransformrotate{180}}
\def\pgf@tqft@flow@east{\pgftransformyscale{-1}\pgftransformrotate{90}}
\def\pgf@tqft@flow@west{\pgftransformrotate{270}}
%    \end{macrocode}
%
% \begin{macro}{pair of pants}
% This is the ``pair of pants'' cobordism with one incoming boundary and two outgoing ones.
%    \begin{macrocode}
\pgfdeclareshape{pair of pants}
{
%    \end{macrocode}
% We use saved anchors to store our current parameters
% Internally, all we really need to know is our height and boundary separation and the radii of the boundary circles
%    \begin{macrocode}
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
%    \end{macrocode}
% Externally, we need to remember our imposed transformation, so we save the locations of the boundary components as seen from outside.
%    \begin{macrocode}
  \savedanchor{\ext@inbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Find our current origin
%    \begin{macrocode}
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
%    \end{macrocode}
% save these coordinates
%    \begin{macrocode}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
%    \end{macrocode}
% position of incoming boundary in internal coordinates 
%    \begin{macrocode}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{\pgf@xa}{.5\pgf@ya}}
%    \end{macrocode}
% save these coordinates
%    \begin{macrocode}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
%    \end{macrocode}
% absolute position
%    \begin{macrocode}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
%    \end{macrocode}
% now relative to internal origin
%    \begin{macrocode}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@outbdrya}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{-.5\pgf@xa}{-.5\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@outbdryb}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{.5\pgf@xa}{-.5\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
%    \end{macrocode}    
% Externally available anchors
%    \begin{macrocode}
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary}{\ext@inbdry}
  \anchor{outgoing boundary 1}{\ext@outbdrya}
  \anchor{outgoing boundary 2}{\ext@outbdryb}
%    \end{macrocode}
% Now we construct the background path.
% This is the ``top'' of the cobordism
%    \begin{macrocode}
  \backgroundpath{
%    \end{macrocode}
% Find out our size from the stored values
%    \begin{macrocode}
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
%    \end{macrocode}
% figure out our coordinates, using the internal anchors.
% North, south, east, and west are the coordinates with origin at the centre and incoming boundary at the top.
% The coordinates are correct for the \emph{centres} of the boundary circles.
%    \begin{macrocode}
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x
%    \end{macrocode}
% Apply the flow transformation
%    \begin{macrocode}
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% set east to the eastern side of the eastern boundary
%    \begin{macrocode}
    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
%    \end{macrocode}
% set west to the eastern side of the western boundary
%    \begin{macrocode}
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
%    \end{macrocode}
% Set the heights of control points
%    \begin{macrocode}
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth
%    \end{macrocode}
% Now we draw the cobordism, starting at the western edge of the northern boundary.
%    \begin{macrocode}
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
%    \end{macrocode}
% We draw the upper part of this boundary component, exactly what ``upper'' means depends on which angle we are looking at the cobordism from
%    \begin{macrocode}
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}
%    \end{macrocode}
% Next, we curve down to eastern boundary
%    \begin{macrocode}
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
%    \end{macrocode}
% Reset east to the western edge
%    \begin{macrocode}
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width
%    \end{macrocode}
% Draw the upper part of the eastern boundary component
%    \begin{macrocode}
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}
%    \end{macrocode}
% Draw the cobordism between the eastern and western boundaries
%    \begin{macrocode}
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}
%    \end{macrocode}
% Draw the upper part of the western boundary component
%    \begin{macrocode}
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}
%    \end{macrocode}
% Reset west to the western edge
%    \begin{macrocode}
    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width
%    \end{macrocode}
% Draw the western edge of the cobordism
%    \begin{macrocode}
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
%    \end{macrocode}
% Close the path
%    \begin{macrocode}
    \pgfpathclose
  }
%    \end{macrocode}
% The path behind the background is the boundary circles and the lower edge of the boundary circles.
%    \begin{macrocode}
  \behindbackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% This group deals with the boundary circles
%    \begin{macrocode}
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      \pgfpathellipse{\pgfqpoint{0pt}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
%    \end{macrocode}
% This group deals with the lower edges of the boundary circles
%    \begin{macrocode}
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}
    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}
    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }
%    \end{macrocode}
% The part on top of the background path is the outer edge of the cobordism (that doesn't lie on a boundary circle) and the upper edges of the boundary circles.
% These are drawn separately to allow for different styles.
% Note that the transformation defined by the background path is still in effect here so we don't apply it again.
%    \begin{macrocode}
  \beforebackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x
%    \end{macrocode}
% The first part deals with the edge of the cobordism
%    \begin{macrocode}
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@north}}
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width
      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width

      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
%    \end{macrocode}
% The last bit deals with the upper edges of the boundary circles.
%    \begin{macrocode}
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{reverse pair of pants}
% This is a node style for the \emph{reverse pair of pants}.
% It works exactly as for the \emph{pair of pants} except that it is upside down.
%    \begin{macrocode}
\pgfdeclareshape{reverse pair of pants}
{
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }

  \savedanchor{\ext@outbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{\pgf@xa}{-.5\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@inbdrya}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{-.5\pgf@xa}{.5\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@inbdryb}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{.5\pgf@xa}{.5\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
    
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary 1}{\ext@inbdrya}
  \anchor{incoming boundary 2}{\ext@inbdryb}
  \anchor{outgoing boundary}{\ext@outbdry}

  \backgroundpath{
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
    \pgf@tqft@ctrla=\pgf@tqft@south
    \advance\pgf@tqft@ctrla by 4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@north
    \advance\pgf@tqft@ctrlb by -4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@south}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}
    
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width

    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}
    
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@south}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      \pgfpathellipse{\pgfqpoint{0pt}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@south}}

    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}

    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}

    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \pgf@tqft@west=-.5\pgf@x

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
    \pgf@tqft@ctrla=\pgf@tqft@south
    \advance\pgf@tqft@ctrla by 4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@north
    \advance\pgf@tqft@ctrlb by -4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width

      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}

    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width

      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@south}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@south}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@north}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@north}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{cylinder to prior}
% This is a cylinder which is skewed towards the lower-numbered boundary components so that it is similar to one leg of the \emph{pair of pants}
%    \begin{macrocode}
\pgfdeclareshape{cylinder to prior}
{
  % All we really need to know is our height and boundary separation
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
    

  % location of boundary components as seen from outside
  % same as inside except that we apply the ``flow transformation''
  % we save them as the ``flow transformation'' might change between
  % the node's use and the anchors' use
  \savedanchor{\ext@inbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{\pgf@xa}{.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@outbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{-.5\pgf@xa}{-.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
    
  % Externally available anchors
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary}{\ext@inbdry}
  \anchor{outgoing boundary}{\ext@outbdry}

  % background path
  \backgroundpath{
    % find out our desired size
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    % figure out our coordinates, using the internal anchors
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@west=-.5\pgf@x
    % apply the flow transformation
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    % set west to the eastern side of the western bdry
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the upper part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % curve down to western bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}
    % draw the upper part of the western boundary component
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % reset west to the western edge
    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@west=-.5\pgf@x
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      % First we fill the boundary ellipses
      \pgfpathellipse{\pgfqpoint{0pt}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
      % Next, we stroke the lower parts of the boundary ellipses
    % set west to the eastern side of the western bdry
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the western boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    % After drawing the main background path, we draw the outer edge
    % of the cobordism and the upper pieces of the boundaries
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@west=-.5\pgf@x
%    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      % First we stroke the boundary of the cobordism itself
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

    % set west to the eastern side of the western bdry
    \advance\pgf@tqft@west by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the eastern edge of the northern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % curve down to western bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}
    % reset west to the western edge
    \advance\pgf@tqft@west by -2\pgf@tqft@bdry@width

    % move to the western edge the upper part of the eastern boundary
      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      % Next, we stroke the lower parts of the boundary ellipses
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options

    % set west to the eastern side of the western bdry
    \advance\pgf@tqft@west by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the western boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@west}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{cylinder to next}
% This is a cylinder that is skewed the other way.
%    \begin{macrocode}
\pgfdeclareshape{cylinder to next}
{
  % All we really need to know is our height and boundary separation
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
    

  % location of boundary components as seen from outside
  % same as inside except that we apply the ``flow transformation''
  % we save them as the ``flow transformation'' might change between
  % the node's use and the anchors' use
  \savedanchor{\ext@inbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{\pgf@xa}{.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@outbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
    \pgf@xa=\pgfkeysvalueof{/pgf/tqft boundary separation}
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{.5\pgf@xa}{-.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
    
  % Externally available anchors
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary}{\ext@inbdry}
  \anchor{outgoing boundary}{\ext@outbdry}

  % background path
  \backgroundpath{
    % find out our desired size
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    % figure out our coordinates, using the internal anchors
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    % apply the flow transformation
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    % set east to the eastern side of the eastern bdry
    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the upper part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % curve down to eastern bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    % draw the upper part of the eastern boundary component
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % reset east to the western edge
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      % First we fill the boundary ellipses
      \pgfpathellipse{\pgfqpoint{0pt}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
      % Next, we stroke the lower parts of the boundary ellipses
    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the eastern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    % After drawing the main background path, we draw the outer edge
    % of the cobordism and the upper pieces of the boundaries
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=.5\pgf@x
%    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      % First we stroke the boundary of the cobordism itself
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the eastern edge of the northern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % curve down to eastern bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    % reset east to the western edge
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width

    % move to the western edge the upper part of the eastern boundary
      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      % Next, we stroke the lower parts of the boundary ellipses
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options

    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the eastern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{tqft cylinder}
% This is a straight cylinder
%    \begin{macrocode}
\pgfdeclareshape{tqft cylinder}
{
  % All we really need to know is our height and boundary separation
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
    

  % location of boundary components as seen from outside
  % same as inside except that we apply the ``flow transformation''
  % we save them as the ``flow transformation'' might change between
  % the node's use and the anchors' use
  \savedanchor{\ext@inbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
    \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{\pgf@xa}{.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
  \savedanchor{\ext@outbdry}{%
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
    % Find our current origin
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
    % position of incoming boundary in internal coordinates 
     \pgf@ya=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgfmoveto{\pgfpoint{.5\pgf@xa}{-.5\pgf@ya}}
    % save these coordinates
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
    % absolute position
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
    % now relative to internal origin
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
  }
    
  % Externally available anchors
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary}{\ext@inbdry}
  \anchor{outgoing boundary}{\ext@outbdry}

  % background path
  \backgroundpath{
    % find out our desired size
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    % figure out our coordinates, using the internal anchors
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=0pt
    % apply the flow transformation
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    % set east to the eastern side of the eastern bdry
    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the upper part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % curve down to eastern bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    % draw the upper part of the eastern boundary component
    \pgfpatharc{0}{\pgf@tqft@upper180}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % reset east to the western edge
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=0pt
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      % First we fill the boundary ellipses
      \pgfpathellipse{\pgfqpoint{0pt}{\pgf@tqft@north}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \pgfpathellipse{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
      % Next, we stroke the lower parts of the boundary ellipses
    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the eastern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    % After drawing the main background path, we draw the outer edge
    % of the cobordism and the upper pieces of the boundaries
    % figure out our coordinates, using the internal anchors
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \tqft@size
    \pgf@tqft@north=.5\pgf@y
    \pgf@tqft@south=-.5\pgf@y
    \pgf@tqft@east=0pt
%    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      % First we stroke the boundary of the cobordism itself
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by \pgf@tqft@bdry@width
    % heights of control points
    \pgf@tqft@ctrla=\pgf@tqft@north
    \advance\pgf@tqft@ctrla by -4\pgf@tqft@bdry@depth
    \pgf@tqft@ctrlb=\pgf@tqft@south
    \advance\pgf@tqft@ctrlb by 4\pgf@tqft@bdry@depth

    % start at the eastern edge of the northern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % curve down to eastern bdry
    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}
    % reset east to the western edge
    \advance\pgf@tqft@east by -2\pgf@tqft@bdry@width

    % move to the western edge the upper part of the eastern boundary
      \pgfpathmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrla}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      % Next, we stroke the lower parts of the boundary ellipses
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options

    % set east to the eastern side of the western bdry
    \advance\pgf@tqft@east by -\pgf@tqft@bdry@width

    % start at the western edge of the northern boundary
    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@north}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    % start at the western edge of the eastern boundary
    \pgfmoveto{\pgfqpoint{\pgf@tqft@east}{\pgf@tqft@south}}

    % draw the lower part of boundary component
    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{tqft cap}
% This ``caps off'' a boundary circle.
%    \begin{macrocode}
\pgfdeclareshape{tqft cap}
{
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{outgoing boundary}{\pgfpointorigin}

  \backgroundpath{
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    \pgf@tqft@ctrlb=4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      \pgfpathellipse{\pgfqpoint{0pt}{0pt}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

      \pgf@tqft@ctrlb=4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}


      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{tqft cup}
% This is the upside-down version of the \emph{tqft cap}.
%    \begin{macrocode}
\pgfdeclareshape{tqft cup}
{
  \savedanchor{\tqft@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft cobordism height}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}
  }

  \savedanchor{\tqft@bdry@size}{%
    \pgf@y=\pgfkeysvalueof{/pgf/tqft circle depth}
    \pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}
  }
    
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
  \anchor{incoming boundary}{\pgfpointorigin}

  \backgroundpath{
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    \pgf@tqft@ctrlb=-4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}
    \pgfpathclose
  }

  \behindbackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
      \pgfpathellipse{\pgfqpoint{0pt}{0pt}}{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}{\pgfqpoint{0pt}{\pgf@tqft@bdry@depth}}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@lower180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}

      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }

  }

  \beforebackgroundpath{%
    \tqft@bdry@size
    \pgf@tqft@bdry@width=\pgf@x
    \pgf@tqft@bdry@depth=\pgf@y

    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options

      \pgf@tqft@ctrlb=-4\pgf@tqft@bdry@depth

    \pgfmoveto{\pgfqpoint{\pgf@tqft@bdry@width}{0pt}}

    \pgfpathcurveto{\pgfqpoint{\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{\pgf@tqft@ctrlb}}{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}
      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
    {
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options

    \pgfmoveto{\pgfqpoint{-\pgf@tqft@bdry@width}{0pt}}

    \pgfpatharc{\pgf@tqft@upper180}{0}{\pgf@tqft@bdry@width and \pgf@tqft@bdry@depth}


      \iftikz@mode@draw
      \pgfusepath{stroke}
      \else
      \pgfusepath{discard}
      \fi
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% Declare some dimension registers to hold the specifications of the cobordism.
%    \begin{macrocode}
\newdimen\tqft@xa
\newdimen\tqft@xb
\newdimen\tqft@c
\newdimen\tqft@ch
\newdimen\tqft@h
\newdimen\tqft@s
\newdimen\tqft@w
\pgfkeys{/pgf/.cd,
  tqft incoming boundary components/.initial=5,
  tqft outgoing boundary components/.initial=4,
  tqft offset/.initial=0
}
%    \end{macrocode}
%
% \begin{macro}{tqft shape}
% This is a generic cobordism shape
%    \begin{macrocode}
\pgfdeclareshape{cobordism}{
%    \end{macrocode}
% Save our specifications: incoming and outgoing boundary components
%    \begin{macrocode}
  \savedmacro{\tqft@incoming}{\edef\tqft@incoming{\pgfkeysvalueof{/pgf/tqft incoming boundary components}}}
  \savedmacro{\tqft@outgoing}{\edef\tqft@outgoing{\pgfkeysvalueof{/pgf/tqft outgoing boundary components}}}
%    \end{macrocode}
% and the offset (in units of boundary components) between the leading incoming and outgoing components (regarded as a shift of the outgoing components relative to the incoming)
%    \begin{macrocode}
  \savedmacro{\tqft@offset}{\edef\tqft@offset{\pgfkeysvalueof{/pgf/tqft offset}}}
%    \end{macrocode}
% Now we save our dimensions: height, separation, and the radii of the boundary circles
%    \begin{macrocode}
  \saveddimen{\tqft@height}{\pgf@x=\pgfkeysvalueof{/pgf/tqft cobordism height}}
  \saveddimen{\tqft@separation}{\pgf@x=\pgfkeysvalueof{/pgf/tqft boundary separation}}
  \saveddimen{\tqft@width}{\pgf@x=\pgfkeysvalueof{/pgf/tqft circle width}}
  \saveddimen{\tqft@depth}{\pgf@x=\pgfkeysvalueof{/pgf/tqft circle depth}}
%    \end{macrocode}
%
% For the externally available anchors, we need to save a few things with the flow transformation in place.
%    \begin{macrocode}
   \savedanchor{\tqft@start@incoming}{%
%    \end{macrocode}
% Apply the transformation
%    \begin{macrocode}
    \pgf@relevantforpicturesizefalse
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Find our current origin under the transformation and save it
%    \begin{macrocode}
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
%    \end{macrocode}
% position of incoming boundary in internal coordinates 
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{-(max(\pgfkeysvalueof{/pgf/tqft incoming boundary components} - 1,\pgfkeysvalueof{/pgf/tqft outgoing boundary components} - 1 + \pgfkeysvalueof{/pgf/tqft offset}) + min(0,\pgfkeysvalueof{/pgf/tqft offset}) + 2 )*\pgfkeysvalueof{/pgf/tqft boundary separation}/2}
    \pgfmathsetlength{\tqft@h}{.5 * \pgfkeysvalueof{/pgf/tqft cobordism height}}
    \pgfmoveto{\pgfpoint{\tqft@xa}{\tqft@h}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
%    \end{macrocode}
% absolute position
%    \begin{macrocode}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
%    \end{macrocode}
% now relative to internal origin
%    \begin{macrocode}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
}
%    \end{macrocode}
%    \begin{macrocode}
   \savedanchor{\tqft@start@outgoing}{%
%    \end{macrocode}
% Apply the transformation
%    \begin{macrocode}
    \pgf@relevantforpicturesizefalse
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Find our current origin under the transformation and save it
%    \begin{macrocode}
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
%    \end{macrocode}
% position of incoming boundary in internal coordinates 
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{-(max(\pgfkeysvalueof{/pgf/tqft incoming boundary components} - 1,\pgfkeysvalueof{/pgf/tqft outgoing boundary components} - 1 + \pgfkeysvalueof{/pgf/tqft offset}) + min(0,\pgfkeysvalueof{/pgf/tqft offset}) + 2 - 2*\pgfkeysvalueof{/pgf/tqft offset})*\pgfkeysvalueof{/pgf/tqft boundary separation}/2}
    \pgfmathsetlength{\tqft@h}{-.5 * \pgfkeysvalueof{/pgf/tqft cobordism height}}
    \pgfmoveto{\pgfpoint{\tqft@xa}{\tqft@h}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
%    \end{macrocode}
% absolute position
%    \begin{macrocode}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
%    \end{macrocode}
% now relative to internal origin
%    \begin{macrocode}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
}
%    \end{macrocode}
%    \begin{macrocode}
   \savedanchor{\tqft@direction}{%
%    \end{macrocode}
% Apply the transformation
%    \begin{macrocode}
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Find our current origin under the transformation and save it
%    \begin{macrocode}
    \pgfpointorigin
    \pgf@xa=\pgf@x
    \pgf@ya=\pgf@y
    \pgfmoveto{\pgfpoint{\pgf@xa}{\pgf@ya}}
    \pgfgetlastxy{\pgf@tqft@ox}{\pgf@tqft@oy}
%    \end{macrocode}
% orientation of cobordism
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{\pgfkeysvalueof{/pgf/tqft boundary separation}}
    \pgfmathsetlength{\tqft@h}{\pgfkeysvalueof{/pgf/tqft cobordism height}}
    \pgfmoveto{\pgfpoint{\tqft@xa}{\tqft@h}}
    \pgfgetlastxy{\pgf@tqft@x}{\pgf@tqft@y}
%    \end{macrocode}
% absolute position
%    \begin{macrocode}
    \setlength{\pgf@x}{\pgf@tqft@x}
    \setlength{\pgf@y}{\pgf@tqft@y}
    \setlength{\pgf@xa}{\pgf@tqft@ox}
    \setlength{\pgf@ya}{\pgf@tqft@oy}
%    \end{macrocode}
% now relative to internal origin
%    \begin{macrocode}
    \advance\pgf@x by -\pgf@xa
    \advance\pgf@y by -\pgf@ya
}
%    \end{macrocode}
% These are our externally available anchors
%    \begin{macrocode}
  \anchor{centre}{\pgfpointorigin}
  \anchor{center}{\pgfpointorigin}
{
  \foreach \tqft@k in {1,...,\pgfkeysvalueof{/pgf/tqft incoming boundary components}} {
    \edef\tqft@anchor{\noexpand\anchor{incoming boundary \tqft@k}{
    \noexpand\tqft@start@incoming
    \noexpand\pgf@xa=\noexpand\pgf@x
    \noexpand\pgf@ya=\noexpand\pgf@y
    \noexpand\tqft@direction
    \noexpand\pgf@xb=\noexpand\pgf@x
    \noexpand\pgf@yb=\noexpand\pgf@y
    \noexpand\advance\noexpand\pgf@xa by \tqft@k\noexpand\pgf@xb
    \noexpand\pgf@x=\noexpand\pgf@xa
    \noexpand\pgf@y=\noexpand\pgf@ya
    }}

    \tqft@anchor
}
  }
{
  \foreach \tqft@k in {1,...,\pgfkeysvalueof{/pgf/tqft outgoing boundary components}} {
    \edef\tqft@anchor{\noexpand\anchor{outgoing boundary \tqft@k}{
    \noexpand\tqft@start@outgoing
    \noexpand\pgf@xa=\noexpand\pgf@x
    \noexpand\pgf@ya=\noexpand\pgf@y
    \noexpand\tqft@direction
    \noexpand\pgf@xb=\noexpand\pgf@x
    \noexpand\pgf@yb=\noexpand\pgf@y
    \noexpand\advance\noexpand\pgf@xa by \tqft@k\noexpand\pgf@xb
    \noexpand\pgf@x=\noexpand\pgf@xa
    \noexpand\pgf@y=\noexpand\pgf@ya
    }}

    \tqft@anchor
}
  }
%    \end{macrocode}
% Now we define the background path.
% This is the upper part of the cobordism.
%    \begin{macrocode}
  \backgroundpath{
%    \end{macrocode}
% Apply the internal transformation
%    \begin{macrocode}
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Convert the boundary separation and width to lengths
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@s}{\tqft@separation}
    \pgfmathsetlength{\tqft@w}{2*\tqft@width}
%    \end{macrocode}
% Compute the starting position of the incoming boundary components so that we get the centre anchor on the centre of the cobordism
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{-(max(\tqft@incoming - 1,\tqft@outgoing - 1 + \tqft@offset) + min(0,\tqft@offset))*\tqft@s/2 - \tqft@width}
    \tqft@xb=\tqft@xa
    \advance\tqft@xb by \tqft@w
    \pgfmathsetlength{\tqft@c}{.5 * \tqft@height - 4 * \tqft@depth}
    \pgfmathsetlength{\tqft@h}{.5 * \tqft@height}
%    \end{macrocode}
% Do we have any incoming boundary components at all?
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
%    \end{macrocode}
% Yes, so move to the position of the first and draw it
%    \begin{macrocode}
    \pgfpathmoveto{\pgfqpoint{\tqft@xa}{\tqft@h}}
     \pgfpatharc{\pgf@tqft@upper180}{0}{\tqft@width and \tqft@depth}
%    \end{macrocode}
% Do we have any more incoming boundary components?
%    \begin{macrocode}
   \ifnum\tqft@incoming>1
%    \end{macrocode}
% Yes, so iterate over the remaining incoming boundary components
%    \begin{macrocode}
    \foreach \tqft@k in {2,...,\tqft@incoming} {
     \advance\tqft@xa by \tqft@k\tqft@s
     \advance\tqft@xb by \tqft@k\tqft@s
     \advance\tqft@xb by -2\tqft@s
     \advance\tqft@xa by -\tqft@s
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@c}}{\pgfqpoint{\tqft@xa}{\tqft@c}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
     \pgfpatharc{\pgf@tqft@upper180}{0}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
% If we don't have any outgoing boundary components, may as well close up now.
%    \begin{macrocode}
    \ifnum\tqft@outgoing=0
     \advance\tqft@xb by \tqft@incoming\tqft@s
     \advance\tqft@xb by -\tqft@s
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
    \fi
    \fi
%    \end{macrocode}
% Shift down to the outgoing components, if we have any
%    \begin{macrocode}
    \ifnum\tqft@outgoing>0
     \advance\tqft@xb by \tqft@incoming\tqft@s
     \advance\tqft@xb by -\tqft@s
     \pgfmathsetlength{\tqft@xa}{\tqft@xa + (\tqft@outgoing - 1 + \tqft@offset) * \tqft@separation + 2*\tqft@width}
%    \end{macrocode}
% If we had incoming boundaries, this is a curveto, otherwise it's a moveto
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \else
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \fi
     \tqft@xb=\tqft@xa
     \advance\tqft@xb by -\tqft@w
%    \end{macrocode}
% Now draw the lower components
%    \begin{macrocode}
     \pgfpatharc{0}{\pgf@tqft@upper180}{\tqft@width and \tqft@depth}
%    \end{macrocode}
% Now iterate over the remaining outgoing boundary components
%    \begin{macrocode}
    \ifnum\tqft@outgoing>1
    \foreach \tqft@k in {2,...,\tqft@outgoing} {
     \advance\tqft@xa by -\tqft@k\tqft@s
     \advance\tqft@xb by -\tqft@k\tqft@s
     \advance\tqft@xb by 2\tqft@s
     \advance\tqft@xa by \tqft@s
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@c}}{\pgfqpoint{\tqft@xa}{-\tqft@c}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
     \pgfpatharc{0}{\pgf@tqft@upper180}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
% Shift back up to the incoming components, if we had any, otherwise arc back to our starting point
%    \begin{macrocode}
     \advance\tqft@xb by -\tqft@outgoing\tqft@s
     \advance\tqft@xb by \tqft@s
    \ifnum\tqft@incoming>0
     \pgfmathsetlength{\tqft@xa}{\tqft@xa - (\tqft@outgoing -1 + \tqft@offset) * \tqft@separation - 2*\tqft@width}
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
    \else
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \fi
    \fi
%    \end{macrocode}
% Close the path
%    \begin{macrocode}
     \pgfpathclose
  }
%    \end{macrocode}
% End of background path
% Now we define the behind background path.
% This is the lower part of the boundary circles.
%    \begin{macrocode}
  \behindbackgroundpath{
%    \end{macrocode}
% Apply the internal transformation
%    \begin{macrocode}
    \csname pgf@tqft@flow@\pgfkeysvalueof{/pgf/tqft flow}\endcsname
%    \end{macrocode}
% Convert the boundary separation and width to lengths
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@s}{\tqft@separation}
    \pgfmathsetlength{\tqft@w}{2*\tqft@width}
%    \end{macrocode}
% Compute the starting position of the incoming boundary components so that we get the centre anchor on the centre of the cobordism
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{-(max(\tqft@incoming - 1,\tqft@outgoing - 1 + \tqft@offset) + min(0,\tqft@offset) + 2)*\tqft@separation/2}
    \pgfmathsetlength{\tqft@h}{.5 * \tqft@height}
%    \end{macrocode}
% This section draws the boundary circles
%    \begin{macrocode}
    {
%    \end{macrocode}
% Initialise the TikZ path settings and read in the style options for the boundary
%    \begin{macrocode}
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary style contents}
      \tikz@mode
      \tikz@options
%    \end{macrocode}
% Do we have any incoming boundary components at all?
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
%    \end{macrocode}
% Yes, so iterate over them
%    \begin{macrocode}
    \foreach \tqft@k in {1,...,\tqft@incoming} {
     \advance\tqft@xa by \tqft@k\tqft@s
     \pgfpathellipse{\pgfqpoint{\tqft@xa}{\tqft@h}}{\pgfqpoint{\tqft@width}{0pt}}{\pgfqpoint{0pt}{\tqft@depth}}
    }
    \fi
%    \end{macrocode}
% Now iterate over the outgoing boundary components, if we have any
%    \begin{macrocode}
    \ifnum\tqft@outgoing>0
     \pgfmathsetlength{\tqft@xa}{\tqft@xa + (\tqft@outgoing + \tqft@offset + 1) * \tqft@separation}
    \foreach \tqft@k in {1,...,\tqft@outgoing} {
     \advance\tqft@xa by -\tqft@k\tqft@s
%     \advance\tqft@xa by \tqft@s
     \pgfpathellipse{\pgfqpoint{\tqft@xa}{-\tqft@h}}{\pgfqpoint{\tqft@width}{0pt}}{\pgfqpoint{0pt}{\tqft@depth}}
    }
    \fi
%    \end{macrocode}
%    \begin{macrocode}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
%    \end{macrocode}
% This section draws the lower parts of the boundary circles
%    \begin{macrocode}
    {
%    \end{macrocode}
% Initialise the TikZ path settings and read in the style options for the boundary
%    \begin{macrocode}
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary lower style contents}
      \tikz@mode
      \tikz@options
      \advance\tqft@xa by .5\tqft@w
%    \end{macrocode}
% Do we have any incoming boundary components at all?
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
%    \end{macrocode}
% Yes, so iterate over them
%    \begin{macrocode}
    \foreach \tqft@k in {1,...,\tqft@incoming} {
     \advance\tqft@xa by \tqft@k\tqft@s
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{\tqft@h}}
     \pgfpatharc{0}{\pgf@tqft@lower180}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
% Now iterate over the outgoing boundary components, if we have any
%    \begin{macrocode}
    \ifnum\tqft@outgoing>0
     \pgfmathsetlength{\tqft@xa}{\tqft@xa + (\tqft@outgoing + \tqft@offset + 1) * \tqft@separation}
    \foreach \tqft@k in {1,...,\tqft@outgoing} {
     \advance\tqft@xa by -\tqft@k\tqft@s
%     \advance\tqft@xa by \tqft@s
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{-\tqft@h}}
     \pgfpatharc{0}{\pgf@tqft@lower180}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
%    \begin{macrocode}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
  }
%    \end{macrocode}
% End of behind background path.
%
% Now we define the before background path.
% This is the upper part of the boundary circles and the cobordism edge.
%    \begin{macrocode}
  \beforebackgroundpath{
%    \end{macrocode}
% We \emph{don't} apply the internal transformation as it is already in place from the \Verb+\backgroundpath+.
% Convert the boundary separation and width to lengths
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@s}{\tqft@separation}
    \pgfmathsetlength{\tqft@w}{2*\tqft@width}
%    \end{macrocode}
% Compute the starting position of the incoming boundary components so that we get the centre anchor on the centre of the cobordism
%    \begin{macrocode}
    \pgfmathsetlength{\tqft@xa}{-(max(\tqft@incoming - 1,\tqft@outgoing - 1 + \tqft@offset) + min(0,\tqft@offset))*\tqft@s/2 - \tqft@width}
    \tqft@xb=\tqft@xa
    \advance\tqft@xb by \tqft@w
    \pgfmathsetlength{\tqft@c}{.5 * \tqft@height - 4 * \tqft@depth}
    \pgfmathsetlength{\tqft@h}{.5 * \tqft@height}
%    \end{macrocode}
% This section draws the non-boundary part of the cobordism.
%    \begin{macrocode}
   {
%    \end{macrocode}
% Initialise the TikZ path settings and read in the style options for the boundary
%    \begin{macrocode}
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft cobordism style contents}
      \tikz@mode
      \tikz@options
% Do we have any incoming boundary components at all?
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
%    \end{macrocode}
% Do we have more than one?
%    \begin{macrocode}
   \ifnum\tqft@incoming>1
%    \end{macrocode}
% Yes, so iterate over the remaining incoming boundary components
%    \begin{macrocode}
    \foreach \tqft@k in {2,...,\tqft@incoming} {
     \advance\tqft@xa by \tqft@k\tqft@s
     \advance\tqft@xb by \tqft@k\tqft@s
     \advance\tqft@xb by -2\tqft@s
     \advance\tqft@xa by -\tqft@s
    \pgfpathmoveto{\pgfqpoint{\tqft@xb}{\tqft@h}}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@c}}{\pgfqpoint{\tqft@xa}{\tqft@c}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
    }
    \fi
%    \end{macrocode}
% If we don't have any outgoing boundary components, may as well close up now.
%    \begin{macrocode}
    \ifnum\tqft@outgoing=0
     \advance\tqft@xb by \tqft@incoming\tqft@s
     \advance\tqft@xb by -\tqft@s
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
    \pgfpathmoveto{\pgfqpoint{\tqft@xb}{\tqft@h}}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
    \fi
    \fi
%    \end{macrocode}
% Shift down to the outgoing components, if we have any
%    \begin{macrocode}
    \ifnum\tqft@outgoing>0
     \advance\tqft@xb by \tqft@incoming\tqft@s
     \advance\tqft@xb by -\tqft@s
     \pgfmathsetlength{\tqft@xa}{\tqft@xa + (\tqft@outgoing - 1 + \tqft@offset) * \tqft@separation + 2*\tqft@width}
%    \end{macrocode}
% If we had incoming boundaries, this is a curveto, otherwise it's a moveto
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathmoveto{\pgfqpoint{\tqft@xb}{\tqft@h}}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \else
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \fi
     \tqft@xb=\tqft@xa
     \advance\tqft@xb by -\tqft@w
%    \end{macrocode}
% Now draw the lower components
%    \begin{macrocode}
     \pgfpathmoveto{\pgfqpoint{\tqft@xb}{-\tqft@h}}
%    \end{macrocode}
% Now iterate over the remaining outgoing boundary components
%    \begin{macrocode}
    \ifnum\tqft@outgoing>1
    \foreach \tqft@k in {2,...,\tqft@outgoing} {
     \advance\tqft@xa by -\tqft@k\tqft@s
     \advance\tqft@xb by -\tqft@k\tqft@s
     \advance\tqft@xb by 2\tqft@s
     \advance\tqft@xa by \tqft@s
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@c}}{\pgfqpoint{\tqft@xa}{-\tqft@c}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
     \advance\tqft@xa by -\tqft@w
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    }
    \fi
%    \end{macrocode}
% Shift back up to the incoming components, if we had any, otherwise arc back to our starting point
%    \begin{macrocode}
     \advance\tqft@xb by -\tqft@outgoing\tqft@s
     \advance\tqft@xb by \tqft@s
    \ifnum\tqft@incoming>0
     \pgfmathsetlength{\tqft@xa}{\tqft@xa - (\tqft@outgoing -1 + \tqft@offset) * \tqft@separation - 2*\tqft@width}
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@ch}}{\pgfqpoint{\tqft@xa}{\tqft@h}}
    \else
     \pgfmathsetlength{\tqft@ch}{max(-\tqft@h,\tqft@h - (\tqft@h - \tqft@c) * ((abs(\tqft@xb - \tqft@xa) - \tqft@w)/\tqft@s + 1))}
     \pgfpathcurveto{\pgfqpoint{\tqft@xb}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@ch}}{\pgfqpoint{\tqft@xa}{-\tqft@h}}
    \fi
    \fi
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
}
%    \end{macrocode}
% This section draws the upper parts of the boundary circles
%    \begin{macrocode}
    {
%    \end{macrocode}
% Initialise the TikZ path settings and read in the style options for the boundary
%    \begin{macrocode}
      \tikz@mode@fillfalse%
      \tikz@mode@drawfalse%
      \let\tikz@mode=\pgfutil@empty
      \let\tikz@options=\pgfutil@empty
      \tikzset{tqft boundary upper style contents}
      \tikz@mode
      \tikz@options
      \advance\tqft@xa by -\tqft@s
      \advance\tqft@xa by \tqft@w
%    \end{macrocode}
% Do we have any incoming boundary components at all?
%    \begin{macrocode}
    \ifnum\tqft@incoming>0
%    \end{macrocode}
% Yes, so iterate over them
%    \begin{macrocode}
    \foreach \tqft@k in {1,...,\tqft@incoming} {
     \advance\tqft@xa by \tqft@k\tqft@s
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{\tqft@h}}
     \pgfpatharc{0}{\pgf@tqft@upper180}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
% Now iterate over the outgoing boundary components, if we have any
%    \begin{macrocode}
    \ifnum\tqft@outgoing>0
     \pgfmathsetlength{\tqft@xa}{\tqft@xa + (\tqft@outgoing + \tqft@offset + 1) * \tqft@separation}
    \foreach \tqft@k in {1,...,\tqft@outgoing} {
     \advance\tqft@xa by -\tqft@k\tqft@s
%     \advance\tqft@xa by \tqft@s
     \pgfpathmoveto{\pgfqpoint{\tqft@xa}{-\tqft@h}}
     \pgfpatharc{0}{\pgf@tqft@upper180}{\tqft@width and \tqft@depth}
    }
    \fi
%    \end{macrocode}
%    \begin{macrocode}
      \edef\tikz@temp{\noexpand\pgfusepath{%
          \iftikz@mode@fill fill,\fi%
          \iftikz@mode@draw draw\fi%
      }}%
      \tikz@temp
    }
  }
}
%    \end{macrocode}
% \end{macro}
% \iffalse
%</package>
% \fi
%
% \Finale

\endinput
